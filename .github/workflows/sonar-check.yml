name: sonar-check

on:
  push:
    branches:
      - dev

jobs:
  build:
    name: Build and analyze
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
      
      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Get Quality Gate Status
        id: qualitygate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          # Log raw API response
          RESPONSE=$(curl -s -u "$SONAR_TOKEN:" "${SONAR_HOST_URL}/api/qualitygates/project_status?projectKey=Nuvola-Digital_vola-docs_c2a6dd6c-5fe1-47f5-bf1a-99d217733f48")
          echo "Raw API Response: $RESPONSE"

          # Exit if response is empty
          if [[ -z "$RESPONSE" ]]; then
            echo "❌ API response is empty. Check secrets or network connectivity."
            exit 1
          fi

          # Parse the SonarQube Quality Gate status
          STATUS=$(echo "$RESPONSE" | jq -r '.projectStatus.status' | xargs)
          echo "Parsed STATUS: $STATUS"

          # Check status and output result
          if [[ "$STATUS" == "OK" ]]; then
            echo "✅ Quality Gate Passed"
          else
            echo "❌ Quality Gate Failed"
            exit 1
          fi
